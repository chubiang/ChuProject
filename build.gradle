//버전 관리
def version = [
		spring: '4.3.10.RELEASE',
		servletAPI: '3.1.0',
		commonsCollections: '3.2.1',
		junit: '4.12',
		slf4j: '1.7.5'
]

List loggers = [
		"org.slf4j:slf4j-api:${slf4jVersion}",
		"org.slf4j:jcl-over-slf4j:${slf4jVersion}",
		"org.slf4j:log4j-over-slf4j:${slf4jVersion}",
		"org.slf4j:jul-to-slf4j:${slf4jVersion}",
		"ch.qos.logback:logback-core:${logbackVersion}",
		"ch.qos.logback:logback-classic:${logbackVersion}"
]

buildscript {
	ext.springVersion = '4.3.10.RELEASE'
	ext.kotlin_version = '1.1.2-4'
	ext.extraConfVersion = '2.2.+'
	ext.slf4jVersion = '1.7.5'
	ext.logbackVersion = '1.0.13'

	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
		classpath "com.netflix.nebula:gradle-extra-configurations-plugin:$extraConfVersion"
	}

}

group "chubiang"

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'kotlin'
apply plugin: 'provided-base'

apply plugin: 'eclipse-wtp' // 이클립스에서 구동하고 배포하기위해 플러그인 설치합니다.
// Bindings between kotlin and spring
apply plugin: 'kotlin-spring'

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
	// 빌드하고나면 프로젝트정보도 같이 지워지는데, Gradle프로젝트임을 인식시켜줍니다.
	project.natures "org.springsource.ide.eclipse.gradle.core.nature"
	wtp {
		facet {
			facet name: 'jst.web', version: '3.1'
			facet name: 'jst.java', version: '1.8'
		}
	}
}

jar {
	manifest {
		attributes 'Implementation-Title': 'Gradle Quickstart',
				'Implementation-Version': version
	}
}

repositories {
	mavenCentral()
}
dependencies {

	//Junit
	testCompile group: 'junit', name: 'junit', version: "${version.junit}"

	// Kotlin Dependencies
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

	// Spring Dependencies
	providedCompile "javax.servlet:javax.servlet-api:${version.servletAPI}"
	compile "org.springframework:spring-webmvc:${version.spring}"
	compile 'org.springframework:spring-context-support:5.0.0.RELEASE'
	compile group: 'commons-collections', name: 'commons-collections', version: "${version.commonsCollections}"
	compile("javax.servlet:jstl:1.2")
	compile("javax.servlet.jsp:jsp-api:2.2")
	//Log Dependencies
	compile loggers
	//JPA
	compile "org.springframework.data:spring-data-jpa:1.5.0.RELEASE"
	// https://mvnrepository.com/artifact/org.freemarker/freemarker
	compile group: 'org.freemarker', name: 'freemarker', version: '2.3.25-incubating'
	// https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-jasper
	compile group: 'org.apache.tomcat.embed', name: 'tomcat-embed-jasper', version: '8.5.20'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.9'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.9'
	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.0'


}

configurations {
	all.collect { configuration ->
		configuration.exclude group: 'commons-logging', module: 'commons-logging'
		configuration.exclude group: 'log4j', module: 'log4j'
		configuration.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
		configuration.exclude group: 'org.slf4j', module: 'slf4j-jcl'
		configuration.exclude group: 'org.slf4j', module: 'slf4j-jdk14'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = "3.5"
}
